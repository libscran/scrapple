% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quickRnaQc.se.R
\name{quickRnaQc.se}
\alias{quickRnaQc.se}
\alias{attachRnaQcMetrics.se}
\title{Quick quality control for RNA data}
\usage{
quickRnaQc.se(
  x,
  subsets = list(),
  block = NULL,
  num.mads = 3,
  num.threads = 1,
  assay.type = "counts",
  altexp.proportions = NULL,
  prefix = NULL,
  flatten = TRUE,
  raw = FALSE
)

attachRnaQcMetrics.se(x, metrics, prefix = "", flatten = TRUE)
}
\arguments{
\item{x}{A \link[SummarizedExperiment]{SummarizedExperiment} object or one of its subclasses.}

\item{subsets}{List of vectors specifying gene subsets of interest, typically for control-like features like mitochondrial genes or spike-in transcripts.
Each vector may be logical (whether to keep each row), integer (row indices) or character (row names).}

\item{block}{Factor specifying the block of origin (e.g., batch, sample) for each cell in \code{metrics}.
Alternatively \code{NULL} if all cells are from the same block.

For \code{filterRnaQcMetrics}, a blocking factor should be provided if \code{block} was used to construct \code{thresholds}.}

\item{num.mads}{Number of median from the median, to define the threshold for outliers in each metric.}

\item{num.threads}{Integer scalar specifying the number of threads to use.}

\item{assay.type}{Integer or string specifying the assay of \code{x} containing the RNA count matrix.}

\item{altexp.proportions}{Character vector containing the names of alternative experiments for which to compute proportions relative to the RNA total.
For each alternative experiment, the proportion is defined \deqn{X/(X+Y)} where \deqn{X} is the alternative experiment's total and \deqn{Y} is the RNA total.
The count matrix in each alternative experiment should be stored in the assay specified by \code{assay.type}.
This parameter is typically used to refer to alternative experiments holding spike-in data.}

\item{prefix}{String containing a prefix to append to the name of each column corresponding to a QC metric in the \code{link[SummarizedExperiment]{colData}}.}

\item{flatten}{Logical scalar indicating whether to flatten the subset proportions into separate columns of the \code{link[SummarizedExperiment]{colData}}.
If \code{FALSE}, the subset proportions are stored in a nested \link[S4Vectors]{DataFrame}.}

\item{raw}{Logical scalar indicating whether to return the QC results directly.}

\item{metrics}{List with the same structure as produced by \code{computeRnaQcMetrics}.}
}
\value{
For \code{quickRnaQc.se}:
\itemize{
\item If \code{raw=FALSE}, \code{x} is returned with additional columns added to its \code{\link[SummarizedExperiment]{colData}}.
Each column contains per-cell values for one of the QC metrics, see \code{\link[scrapper]{computeRnaQcMetrics}} for details.
The suggested thresholds are stored as a list in \code{\link[S4Vectors]{metadata}}.
The \code{colData} also contains a \code{keep} column, specifying which cells are to be retained.
\item If \code{raw=TRUE}, a list is returned containing \code{metrics}, the result of \code{\link[scrapper]{computeRnaQcMetrics}};
\code{thresholds}, the result of \code{\link[scrapper]{suggestRnaQcThresholds}},
and \code{keep}, the result of \code{\link[scrapper]{FilterRnaQcMetrics}}.
}

For \code{attachRnaQcMetrics.se}. \code{x} is returned with additional columns added to its \code{colData}.
}
\description{
Quickly compute quality control (QC) metrics, thresholds and filters from RNA data in a \link[SummarizedExperiment]{SummarizedExperiment}.
}
\examples{
sce <- getTestRnaData.se()
sce <- quickRnaQc.se(sce, subsets=list(mito=grepl("^mt", rownames(sce))))
colData(sce)[,c("sum", "detected", "mito.proportion")]
metadata(sce)$thresholds
summary(sce$keep)

# Computing spike-in proportions, if available.
sce <- getTestRnaData.se()
sce <- quickRnaQc.se(
   sce,
   subsets=list(mito=grepl("^mt", rownames(sce))),
   altexp.proportions="ERCC"
)
colData(sce)[,c("sum", "detected", "mito.proportion", "ERCC.proportion")]

# We can also manually execute many of the steps:
sce <- getTestRnaData.se()
res <- quickRnaQc.se(sce, subsets=list(mito=grepl("^mt", rownames(sce))), raw=TRUE)
sce <- attachRnaQcMetrics.se(sce, res$metrics, prefix="rna.qc.")
res$thresholds$sum <- 1000 # manual override of the sum threshold
res$thresholds$subsets["mito"] <- 0.05 # same for the mitochondrial proportions
sce$rna.qc.keep <- scrapper::filterRnaQcMetrics(res$thresholds, res$metrics)

}
\seealso{
\code{\link[scrapper]{computeRnaQcMetrics}},
\code{\link[scrapper]{suggestRnaQcThresholds}},
and \code{\link[scrapper]{filterRnaQcMetrics}}
from the \pkg{scrapper} package.
}
\author{
Aaron Lun
}

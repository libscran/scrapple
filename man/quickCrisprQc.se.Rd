% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quickCrisprQc.se.R
\name{quickCrisprQc.se}
\alias{quickCrisprQc.se}
\alias{attachCrisprQcMetrics.se}
\title{Quick quality control for CRISPR data}
\usage{
quickCrisprQc.se(
  x,
  block = NULL,
  num.mads = 3,
  num.threads = 1,
  assay.type = "counts",
  prefix = NULL,
  flatten = TRUE,
  raw = FALSE
)

attachCrisprQcMetrics.se(x, metrics, prefix = "", flatten = TRUE)
}
\arguments{
\item{x}{A \link[SummarizedExperiment]{SummarizedExperiment} object or one of its subclasses.
Rows correspond to CRISPR guides and columns correspond to cells.}

\item{block}{Factor specifying the block of origin (e.g., batch, sample) for each cell in \code{metrics}.
Alternatively \code{NULL} if all cells are from the same block.

For \code{filterCrisprQcMetrics}, a blocking factor should be provided if \code{block} was used to construct \code{thresholds}.}

\item{num.mads}{Number of median from the median, to define the threshold for outliers in each metric.}

\item{num.threads}{Integer scalar specifying the number of threads to use.}

\item{assay.type}{Integer or string specifying the assay of \code{x} containing the CRISPR count matrix.}

\item{prefix}{String containing a prefix to append to the name of each column corresponding to a QC metric in the \code{link[SummarizedExperiment]{colData}}.}

\item{flatten}{Logical scalar indicating whether to flatten the subset proportions into separate columns of the \code{link[SummarizedExperiment]{colData}}.
If \code{FALSE}, the subset proportions are stored in a nested \link[S4Vectors]{DataFrame}.}

\item{raw}{Logical scalar indicating whether to return the QC results directly.}

\item{metrics}{List with the same structure as produced by \code{computeCrisprQcMetrics}.}
}
\value{
For \code{quickCrisprQc.se}:
\itemize{
\item If \code{raw=FALSE}, \code{x} is returned with additional columns added to its \code{\link[SummarizedExperiment]{colData}}.
Each column contains per-cell values for one of the QC metrics, see \code{\link[scrapper]{computeCrisprQcMetrics}} for details.
The suggested thresholds are stored as a list in \code{\link[S4Vectors]{metadata}}.
The \code{colData} also contains a \code{keep} column, specifying which cells are to be retained.
\item If \code{raw=TRUE}, a list is returned containing \code{metrics}, the result of \code{\link[scrapper]{computeCrisprQcMetrics}};
\code{thresholds}, the result of \code{\link[scrapper]{suggestCrisprQcThresholds}},
and \code{keep}, the result of \code{\link[scrapper]{FilterCrisprQcMetrics}}.
}

For \code{attachCrisprQcMetrics.se}. \code{x} is returned with additional columns added to its \code{colData}.
}
\description{
Quickly compute quality control (QC) metrics, thresholds and filters from CRISPR data in a \link[SummarizedExperiment]{SummarizedExperiment}.
}
\examples{
sce <- altExp(getTestCrisprData.se(), "CRISPR Guide Capture")
sce <- quickCrisprQc.se(sce)
colData(sce)[,c("sum", "detected", "igg.sum")]
metadata(sce)$thresholds
summary(sce$keep)

# We can also manually execute many of the steps:
sce <- altExp(getTestCrisprData.se(), "CRISPR Guide Capture")
res <- quickCrisprQc.se(sce, raw=TRUE)
sce <- attachCrisprQcMetrics.se(sce, res$metrics, prefix="crispr.qc.")
res$thresholds$max.value <- 10 # manual override of the sum threshold
sce$crispr.qc.keep <- scrapper::filterCrisprQcMetrics(res$thresholds, res$metrics)

}
\seealso{
\code{\link[scrapper]{computeCrisprQcMetrics}},
\code{\link[scrapper]{suggestCrisprQcThresholds}},
and \code{\link[scrapper]{filterCrisprQcMetrics}}
from the \pkg{scrapper} package.
}
\author{
Aaron Lun
}
